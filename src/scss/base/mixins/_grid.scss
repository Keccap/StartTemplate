@mixin columnWidth($cols, $max-cols, $left-gutter: 0px, $right-gutter: $left-gutter) {
  $width: $cols * (100% / $max-cols);

  @if (
      ($left-gutter == 0px and $right-gutter == 0px) or
      ($left-gutter == 0% and $right-gutter == 0%) or
      ($left-gutter == 0rem and $right-gutter == 0rem)
  ) {
    width: $width;
  } @else {
    width: calc(#{$width} - #{$left-gutter} - #{$right-gutter});
  }
}


@mixin column($cols, $max-cols, $left-gutter: 0px, $right-gutter: $left-gutter) {
  flex: 0 0 auto;
  @include columnWidth($cols, $max-cols, $left-gutter, $right-gutter);
  margin-left: #{$left-gutter};
  margin-right: #{$right-gutter};
}



@mixin columns-nth($columns, $gutter) {
  $width: 100% / $columns;
  width: calc(#{$width} - #{($gutter * ($columns - 1) ) / $columns});
  margin-right: $gutter;

  &:nth-child(#{$columns}n) {
    margin-right: 0;
  }
}


/*
$selector is a string:
  @include last-row('&', 2) {
    margin-bottom: 0;
  }
*/
@mixin last-row($selector, $cols-number) {
  $selector: $selector + unquote("");
  #{$selector}:nth-child(#{$cols-number}n+1):nth-last-child(-n+#{$cols-number}),
  #{$selector}:nth-child(#{$cols-number}n+1):nth-last-child(-n+#{$cols-number}) ~ #{$selector} {
    @content;
  }
}
